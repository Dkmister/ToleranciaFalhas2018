[DEFAULT]

debug = False

# Name of the gdb executable, usualy is "gdb-mic" for Xeon Phi
gdbExecName = gdb

# How many interrupt signals to send sequentially
seqSignals = 5
# How many random threads will attempt to send interrupt signals
numThreadsFI = 3

# Max time to send signal. It should be the app exec time in seconds
maxWaitTime = 3

# Commands to set the session inside GDB environment
gdbInitStrings = file /home/dasmig/Documents/Projects/carol-fi/codes/c_mulmat/mulmat; set args /home/dasmig/Documents/Projects/carol-fi/codes/c_mulmat/matrix1.txt /home/dasmig/Documents/Projects/carol-fi/codes/c_mulmat/matrix2.txt /home/dasmig/Documents/Projects/carol-fi/codes/c_mulmat/output.bin

goldFile = /home/dasmig/Documents/Projects/carol-fi/codes/c_mulmat/gold/output.bin
outputFile = /home/dasmig/Documents/Projects/carol-fi/codes/c_mulmat/output.bin

# Shell command to send SIGINT to the application being tested
signalCmd = killall -2 mulmat

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 gdb;killall -9 mulmat

[mulmat-random]
# Start and end time to try randomly inject a fault
initSignal = 0
endSignal = 3
# Which fault model to use, 0 -> single; 1 -> double; 2 -> random; 3 -> zeros; 4 -> least significant bits (LSB)
faultModel = 2
